##### Level 2 commands. That will be launched only after a sucessful layer 1 launch.
### For filesystems discovery

<<<<<<< HEAD
# Tags fs discovery
define command {
    command_name    fs_discovery
    command_line    $PLUGINSDIR$/discovery/fs_discovery_runner.py -H $HOSTNAME$ -C $SNMPCOMMUNITYREAD$ -O $ARG1$ -m tags
}

# Macros fs discovery
=======
# Tags mode discovery

#define command {
#    command_name    fs_discovery
#    command_line    $PLUGINSDIR$/discovery/fs_discovery_runner.py -H $HOSTNAME$ -C $SNMPCOMMUNITYREAD$ -O $ARG1$ -m tags
#}

# Macros mode discovery

>>>>>>> master
#define command {
#    command_name    fs_discovery
#    command_line    $PLUGINSDIR$/discovery/fs_discovery_runner.py -H $HOSTNAME$ -C $SNMPCOMMUNITYREAD$ -O $ARG1$ -m macros
#}

define discoveryrun {
        discoveryrun_name       filesystems
        discoveryrun_command    fs_discovery!$_HOSTOS$
        os                      ^aix$|^linux$|^hp-ux$
# Often seen by nmap as open|filtered state
# Set $NMAPMAXRETRIES$ macros in resources.cfg = 3 
# to correctly trigger this port
        openports               ^161$
}

<<<<<<< HEAD
=======


>>>>>>> master
#################################################################
# Unix Filesystem discovery rules
#################################################################
define discoveryrule {
        discoveryrule_name     fs_root
        creation_type          host
        fs                     ^_root$
        fqdn                   ^.{6}p\d$
        +use                   fs_root
}

define discoveryrule {
        discoveryrule_name     fs_var
        creation_type          host
        fs                     var$
        fqdn                   ^.{6}p\d$
        +use                   fs_var
}

define discoveryrule {
        discoveryrule_name     fs_usr
        creation_type          host
        fs                     usr$
        fqdn                   ^.{6}p\d$
        +use                   fs_usr
}

define discoveryrule {
        discoveryrule_name     fs_opt
        creation_type          host
        fs                     opt$
        fqdn                   ^.{6}p\d$
        +use                   fs_opt
}

define discoveryrule {
        discoveryrule_name     fs_home
        creation_type          host
        fs                     home$
        fqdn                   ^.{6}p\d$
        +use                   fs_home
}

define discoveryrule {
        discoveryrule_name     fs_admin
        creation_type          host
        fs                     admin$
        fqdn                   ^.{6}p\d$
        +use                   fs_admin
}

define discoveryrule {
        discoveryrule_name     fs_backup
        creation_type          host
        fs                     backup$
        fqdn                   ^.{6}p\d$
        +use                   fs_backup
}

define discoveryrule {
        discoveryrule_name     fs_tmp
        creation_type          host
        fs                     tmp$
        fqdn                   ^.{6}p\d$
        +use                   fs_tmp
}

define discoveryrule {
        discoveryrule_name     fs_appli11
        creation_type          host
        fs                     appli11$
        fqdn                   ^.{6}ux[a-zA-Z]{2}p$
        +use                   fs_appli11
}

define discoveryrule {
        discoveryrule_name     fs_appli01
        creation_type          host
        fs                     appli01$
        fqdn                   ^.{6}ux[a-zA-Z]{2}t$
        +use                   fs_appli01
}

define discoveryrule {
        discoveryrule_name     fs_appli12
        creation_type          host
        fs                     appli12$
        fqdn                   ^.{6}as[a-zA-Z]{2}p$
        +use                   fs_appli12
}

define discoveryrule {
        discoveryrule_name     fs_appli02
        creation_type          host
        fs                     appli02$
        fqdn                   ^.{6}as[a-zA-Z]{2}t$
        +use                   fs_appli02
}

define discoveryrule {
        discoveryrule_name     fs_oracle1X
        creation_type          host
        fs                     oracle1.$
        fqdn                   ^.{6}db[a-zA-Z]{2}p$
        +use                   fs_oracle1X
}

define discoveryrule {
        discoveryrule_name     fs_oracle0X
        creation_type          host
        fs                     oracle0.$
        fqdn                   ^.{6}db[a-zA-Z]{2}t$
        +use                   fs_oracle0X
}

define discoveryrule {
        discoveryrule_name     fs_oraker11
        creation_type          host
        fs                     oraker11$
        fqdn                   ^.{6}db[a-zA-Z]{2}p$
        +use                   fs_oraker11
}

define discoveryrule {
        discoveryrule_name     fs_oraker01
        creation_type          host
        fs                     oraker01$
        fqdn                   ^.{6}db[a-zA-Z]{2}t$
        +use                   fs_oraker01
}

define discoveryrule {
        discoveryrule_name     fs_oraker12
        creation_type          host
        fs                     oraker12$
        fqdn                   ^.{6}as[a-zA-Z]{2}p$
        +use                   fs_oraker12
}

define discoveryrule {
        discoveryrule_name     fs_oraker02
        creation_type          host
        fs                     oraker02$
        fqdn                   ^.{6}as[a-zA-Z]{2}t$
        +use                   fs_oraker02
}

define discoveryrule {
        discoveryrule_name     fs_oraman1X
        creation_type          host
        fs                     oraman1\d$
        fqdn                   ^.{6}db[a-zA-Z]{2}p$
        +use                   fs_oraman1X
}

define discoveryrule {
        discoveryrule_name     fs_oraman0X
        creation_type          host
        fs                     oraman0\d$
        fqdn                   ^.{6}db[a-zA-Z]{2}t$
        +use                   fs_oraman0X
}

define discoveryrule {
        discoveryrule_name     fs_oralog1X
        creation_type          host
        fs                     oralog1\d$
        fqdn                   ^.{6}db[a-zA-Z]{2}p$
        +use                   fs_oralog1X
}

define discoveryrule {
        discoveryrule_name     fs_oralog0X
        creation_type          host
        fs                     oralog0\d$
        fqdn                   ^.{6}db[a-zA-Z]{2}t$
        +use                   fs_oralog0X
}
